{"version":3,"file":"ds-alurabooks.cjs.production.min.js","sources":["../src/componentes/AbBotao/index.tsx","../src/componentes/AbGrupoOpcoes/index.tsx","../src/componentes/AbCard/index.tsx","../src/componentes/AbTag/index.tsx","../src/componentes/AbCampoTexto/index.tsx","../src/componentes/AbInputQuantidade/index.tsx","../src/componentes/AbModal/index.tsx"],"sourcesContent":["import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport interface AbBotaoProps {\n    texto?: string\n    tipo?: 'primario' | 'secundario'\n    onClick?: () => void\n}\n\nconst BotaoEstilizado = styled.button<AbBotaoProps>`\n    background: ${(props: AbBotaoProps) => props.tipo === 'primario' ? '#EB9B00' : '#FFF'};\n    padding: 16px 32px;\n    border: 2px solid #EB9B00;\n    color: ${(props: AbBotaoProps) => props.tipo === 'primario' ? '#FFF' : '#EB9B00'};\n    font-size: 20px;\n    cursor: pointer;\n    ${(props: AbBotaoProps) => props.tipo === 'primario' \n        ? css`\n            &:hover {\n                background: #B87900;\n                border: 2px solid #B87900;\n            }\n        `\n        : css`\n        &:hover {\n            background: #FFF;\n            border: 2px solid #B87900;\n            color: #B87900;\n        }\n        `\n    }\n`\nexport const AbBotao = ({ texto, onClick, tipo = 'primario' } : AbBotaoProps) => {\n    return (<BotaoEstilizado onClick={onClick} tipo={tipo}>\n        {texto}\n    </BotaoEstilizado>)\n}\n\n\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst SectionEstilizada = styled.section<{ selecionado: boolean }>`\n    width: 194px;\n    height: 88px;\n    background: ${props => props.selecionado ? 'linear-gradient(97.54deg, #002F52 35.49%, #326589 165.37%)' : '#FFFFFF'};\n    border: 1px solid;\n    border-color: ${props => props.selecionado ? '#002F52' : '#EB9B00'};\n    border-radius: 8px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    text-align: center;\n    margin: 10px;\n    font-family: sans-serif;\n    cursor: pointer;\n    header {\n        color: ${props => props.selecionado ? '#FFF' : '#EB9B00'};\n        font-size: 12px;\n        font-weight: 400;\n    }\n    strong {\n        color: ${props => props.selecionado ? '#FFF' : '#EB9B00'};;\n        font-weight: 700;\n        font-size: 16px;\n    }\n    footer {\n        color: ${props => props.selecionado ? '#FFF' : 'rgba(0, 0, 0, 0.54)'};;\n        font-weight: 400;\n        font-size: 12px;\n    }\n`\n\nexport interface AbGrupoOpcao {\n    id: number\n    titulo: string\n    corpo: string\n    rodape: string\n}\n\nexport interface AbGrupoOpcoesProps {\n    opcoes: AbGrupoOpcao[]\n    valorPadrao?: AbGrupoOpcao | null\n    onChange?: (opcao: AbGrupoOpcao) => void\n}\n\nexport const AbGrupoOpcoes = ({ opcoes, onChange , valorPadrao} : AbGrupoOpcoesProps) => {\n    const [selecao, setSelecao] = useState<AbGrupoOpcao | null>(valorPadrao ?? null)\n    const aoSelecionar = (opcao: AbGrupoOpcao): void => {\n        setSelecao(opcao);\n        if (onChange) {\n            onChange(opcao)\n        }\n    }\n    \n    return (<>\n        {opcoes.map(opcao => \n            <SectionEstilizada\n                onClick={() => aoSelecionar(opcao)}\n                key={opcao.id}\n                selecionado={selecao?.id == opcao.id}\n            >\n                <header>\n                    {opcao.titulo}\n                </header>\n                <div>\n                    <strong>{opcao.corpo}</strong>\n                </div>\n                <footer>\n                    {opcao.rodape}\n                </footer>\n            </SectionEstilizada>\n        )}\n    </>)\n}\n\n","import React, { ReactNode } from \"react\"\nimport styled from \"styled-components\";\n\nexport interface CardProps {\n    children: ReactNode\n}\n\nconst CardStyled = styled.div`\n    padding: 48px;\n    background: #FFFFFF;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    border-radius: 10px;\n`\n\nexport const AbCard = ({ children }: CardProps) => {\n    return (\n        <CardStyled>\n            {children}\n        </CardStyled>\n    )\n}","import React from \"react\"\nimport styled from \"styled-components\";\n\nexport interface AbTagProps {\n    texto: string\n}\n\nconst TagStyled = styled.div`\n    padding: 24px 32px;\n    color: #FFFFFF;\n    background: #EB9B00;\n    font-weight: 700;\n    font-size: 24px;\n    display: inline-block;\n    font-family: sans-serif;\n`\n\nexport const AbTag = ({ texto }: AbTagProps) => {\n    return (\n        <TagStyled>\n            {texto}\n        </TagStyled>\n    )\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LabelEstilizada = styled.label<{ darkmode: boolean }>`\n    color: ${(props) => props.darkmode ? '#FFF' : '#002F52'};\n    display: block;\n    font-weight: 700;\n    font-size: 16px;\n    font-family: Arial, Helvetica, sans-serif;\n    margin-left: 16px;\n    margin-bottom: 8px\n`\n\nconst InputEstilizado = styled.input<{ placeholderAlign: string, darkmode: boolean }>`\n    font-size: 16px;\n    line-height: 24px;\n    padding: 8px 24px;\n    border: 1px solid;\n    border-radius: 45px;\n    &:focus{\n        outline: none;\n    }\n    width: 100%;\n    box-sizing: border-box;\n    background: ${(props) => props.darkmode ? 'transparent' : '#FFF'};\n    border-color: ${(props) => props.darkmode ? '#FFF' : '#002F52'};\n    text-align: ${(props) => props.placeholderAlign};\n    ::placeholder,\n    ::-webkit-input-placeholder  {\n        color: ${(props) => props.darkmode ? '#FFF' : '#002F52'};\n    }\n`\n\nexport interface AbCampoTextoProps {\n    label?: string;\n    placeholder?: string;\n    placeholderAlign?: 'left' | 'center' | 'right';\n    value: string;\n    type?: 'text' | 'email' | 'password' | 'date';\n    onChange: (value: string) => void\n    darkmode?: boolean\n}\n\nexport const AbCampoTexto = ({ \n        label, \n        value, \n        onChange, \n        type = 'text', \n        placeholder = \"\", \n        placeholderAlign = 'left', \n        darkmode = false \n}: AbCampoTextoProps) => {\n    return (\n        <div>\n            {label && <LabelEstilizada darkmode={darkmode}>\n                {label}\n            </LabelEstilizada>}\n            <InputEstilizado\n                placeholder={placeholder}\n                placeholderAlign={placeholderAlign}\n                darkmode={darkmode}\n                type={type}\n                value={value}\n                onChange={event => onChange(event.target.value)}\n            />\n        </div>\n    )\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\";\n\nconst BotaoEstilizado = styled.button`\n    background: #002F52;\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.25);\n    border: none;\n    cursor: pointer;\n    color: #FFF;\n    width: 28px;\n    height: 28px;\n    border-radius: 50%;\n`\nconst SpanEstilizado = styled.span`\n    font-size: 18px;\n    line-height: 27px;\n    display: inline-block;\n    margin: 0 12px;\n    color: #002F52;\n    font-family: Arial, Helvetica, sans-serif;\n`\n\nconst FlexContainerEstilizado = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\nconst ContainerEstilizado = styled.div`\n    width: 100px;\n    text-align: center;\n    display: inline-block;\n`\n\nconst LabelEstilizada = styled.label`\n    color: #002F52;\n    display: block;\n    font-weight: 700;\n    font-size: 16px;\n    font-family: Arial, Helvetica, sans-serif;\n    margin-bottom: 8px;\n`\n\nexport interface AbInputQuantidadeProps {\n    onChange?: (value:number) => void\n}\n\nexport const AbInputQuantidade = ({ onChange } : AbInputQuantidadeProps) => {\n    const [value, setValue] = useState(1)\n\n    useEffect(() => {\n        if (onChange) {            \n            onChange(Number(value))\n        }\n    }, [value])\n\n    return (\n        <ContainerEstilizado>\n            <LabelEstilizada>Quantidade</LabelEstilizada>\n            <FlexContainerEstilizado>\n                <BotaoEstilizado onClick={() => setValue(prev => prev - 1)}>\n                    -\n                </BotaoEstilizado>\n                <SpanEstilizado>\n                    {value}\n                </SpanEstilizado>\n                <BotaoEstilizado onClick={() => setValue(prev => prev + 1)}>\n                    +\n                </BotaoEstilizado>\n            </FlexContainerEstilizado>\n        </ContainerEstilizado>\n    )\n}\n","import React, { ReactNode } from \"react\"\nimport styled from \"styled-components\";\n\nexport interface AbModalProps {\n    children: ReactNode,\n    titulo: string,\n    aberta: boolean,\n    aoFechar: () => void\n}\n\nconst JanelaModal = styled.div`\n    position: fixed;\n    padding: 64px;\n    background: #FFFFFF;\n    box-shadow: 4px 4px 24px -4px rgba(0, 0, 0, 0.15);\n    border-radius: 24px;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\nconst FundoModal = styled.div`\n    position: fixed;\n    left: 0px;\n    right: 0px;\n    top: 0px;\n    bottom: 0px;\n    background: rgba(101, 101, 101, 0.85);\n`\n\nconst TituloModalWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    font-family: sans-serif;\n    align-items: center;\n`\nconst TituloModal = styled.h2`\n    font-weight: 700;\n    font-size: 32px;\n    line-height: 48px;\n    color: #EB9B00;\n    margin: 0;\n`\nconst BotaoFecharModal = styled.button`\n    background: transparent;\n    border: none;\n    cursor: pointer;\n    color: #002F52;\n`\n\nexport const AbModal = ({ children, aberta, aoFechar, titulo }: AbModalProps) => {\n    if (!aberta) {\n        return <></>\n    }\n    return (\n        <>\n            <FundoModal onClick={aoFechar} />\n            <JanelaModal>\n                <TituloModalWrapper>\n                    <TituloModal>{titulo}</TituloModal>\n                    <BotaoFecharModal onClick={aoFechar}>X</BotaoFecharModal>\n                </TituloModalWrapper>\n                {children}\n            </JanelaModal>\n        </>\n    )\n}"],"names":["BotaoEstilizado","styled","button","props","tipo","css","SectionEstilizada","section","selecionado","CardStyled","div","TagStyled","LabelEstilizada","label","darkmode","InputEstilizado","input","placeholderAlign","SpanEstilizado","span","FlexContainerEstilizado","ContainerEstilizado","JanelaModal","FundoModal","TituloModalWrapper","TituloModal","h2","BotaoFecharModal","React","onClick","texto","value","onChange","type","placeholder","event","target","children","opcoes","valorPadrao","useState","selecao","setSelecao","map","opcao","aoSelecionar","key","id","titulo","corpo","rodape","setValue","useEffect","Number","prev","aoFechar","aberta"],"mappings":"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"}